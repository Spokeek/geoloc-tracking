<link rel="stylesheet" href="/public/home.css"/>
<script src="/socket.io/socket.io.js"></script>
<script src="/js-cookie/js.cookie.js"></script>
<script>
	let socket
	let uuid
	let map
	let markers = []
	let personalMarker = null
	let record = null
	
	const errorWithGeoloc = (err) => console.error(err)
	
	const applyToMarkers = (positions) => {
		markers.forEach((m) => m.setMap(null))
		markers = positions.map(p => {
			const marker = new google.maps.Marker({
				position: {lat: +p.lat, lng: +p.lng},
				title: p.uuid === uuid ? `${p.username} (you)` : p.username,
				icon: p.uuid === uuid ? '/public/user_current.png' : '/public/user.png',
				map
			})
			if(p.uuid === uuid){
				personalMarker = marker
				getUsernameField().placeholder = p.username
			}
			return marker
		})
	}
	
	const centerCamera = (position) => {
		if(personalMarker || position){
			map.panTo(personalMarker ? personalMarker.getPosition() : position)
		}
	}
	
	const getUsernameField = () => document.querySelector('#controls input[name="username"]')
	
	const changeUsername = () => {
		const field = getUsernameField()
		socket.emit('changeUsername', {uuid, username: field.value})
		field.value = ""
	}

	const notify = (data) => {
		const {user_data, distance} = data
		const distanceStr = distance < 1 ? `${Math.round(distance * 1000)} m` : `${Math.round(distance)} km`
		const message = `The user ${user_data.username} is at ${distanceStr} from you`
		const makeNotification = () => new Notification(message)
		
		if (!('Notification' in window)) {
			alert("This browser does not support notifications")
		}
		else if (Notification.permission === 'granted') {
			makeNotification()
		}
		else if (Notification.permission !== 'denied') {
			Notification.requestPermission((permission) => {
				if(!('permission' in Notification)) {
					Notification.permission = permission
				}
				if (permission === 'granted') {
					makeNotification()
				}
			})
		}
	}
	
	if (!navigator.geolocation) {
		errorWithGeoloc("geoloc not enabled")	
    }
	else{
		uuid = Cookies.get('uuid') || "{{uuid}}"
		Cookies.set('uuid', uuid)
		console.log(`uuid: ${uuid}`)
		
		socket = io()
		socket.on('connect', () => {
			console.log("Connected")
			socket.on('users_data', (users_data) => applyToMarkers(users_data))
			socket.on('user_notify', (data) => notify(data))
		})
	}
	
	function initMap() {
		var center = {lat: 47.218371, lng: -1.553621};
		map = new google.maps.Map(document.getElementById('map'), {
			zoom: 19,
			center
		})
	}
	
	const startPositioning = () => {
		if(socket && record === null){
			const options = {
				enableHighAccuracy: true,
				timeout: 5000,
				maximumAge: 0
			}
			let isFirst = true
			record = navigator.geolocation.watchPosition((pos) => {
					const {latitude: lat, longitude: lng} = pos.coords
					console.log(`Your position changed to ${lat}:${lng}`)
					socket.emit('data', {uuid, lat, lng})
					if(isFirst){
						centerCamera({lat, lng})
						isFirst = false
					}
				}, (err) => errorWithGeoloc(err)
				, options
			)
		}
	}
	
    </script>
    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key={{googleApiToken}}&callback=initMap">
    </script>

</script>
<div id="controls" class="flex">
	<div><button onclick="startPositioning()">Start positioning</button></div>
	<div><button onclick="centerCamera()">Center camera</button></div>
	<div class="flex">
		<div>Username:</div>
		<div><input name="username" placeholder="Anonymous"/></div>
		<div><button onclick="changeUsername()">Update</button></div>
	</div>
</div>
<div id="map" class="flex"></div>
